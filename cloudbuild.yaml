steps:
  # Build the Go binary.
  - name: 'gcr.io/cloud-builders/go:alpine-1.25'
    args: ['mod', 'download']
    env: ['GOPATH=/go']
  # Run the tests.
  - name: 'gcr.io/cloud-builders/go:alpine-1.25'
    args: ['test', './...', ' -p', '8']
    env: ['GOPATH=/go']
  - name: 'gcr.io/cloud-builders/go:alpine-1.25'
    args: ['build', '-v', '-o', '/app/bin/membership', './src/cmd/membership']
    env: ['GOPATH=/go']
  # Build the production image.
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '--tag=gcr.io/$PROJECT_ID/membership',
      '--file=Dockerfile-cloudbuild',
      '.'
    ]
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/membership' ]
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', 'membership', '--image', 'gcr.io/$PROJECT_ID/membership', '--region', 'europe-west4',
           '--cpu=1', '--max-instances=2', '--memory=128Mi', '--timeout=20s', '--no-allow-unauthenticated', '--concurrency=80']
images:
  - 'gcr.io/$PROJECT_ID/membership'
options:
  logging: CLOUD_LOGGING_ONLY
  volumes:
    - name: go-modules
      path: /go